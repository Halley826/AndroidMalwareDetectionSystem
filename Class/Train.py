#!/usr/bin/env python
# _*_ coding: utf-8 _*_
# @Time : 2021/12/27 10:01 PM
# @Author : Halley@https://github.com/Halley826/
# @Version：V 1.0
# @File : test.py
# @desc :训练模型，并保存
import pandas as pd
import numpy as np
import unittest
from sklearn.model_selection import train_test_split
from sklearn.ensemble import AdaBoostClassifier
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
from sklearn.tree import DecisionTreeClassifier
import joblib
csv="/Users/halley/OneDrive/code/python/own_project/pycharm/androidMalwareDetection/out/vector/permission_vector.csv"

if __name__=="__main__":
    df=pd.read_csv(csv)
    print(df)
    df_permisson_vectorizer=df.drop(['name','label'],axis=1)
    y=df['label']
    x_train, x_test, y_train, y_test = train_test_split(df_permisson_vectorizer, y, random_state=100, test_size=0.20)
    model = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=100)
    model.fit(x_train, y_train)
    y_pred = model.predict(x_test)
    print("Test set accuracy of our Adaboost Classifier is {}".format(round(accuracy_score(y_pred, y_test) * 100, 2)))
    plt.subplots(figsize=(6, 6))
    sns.heatmap(confusion_matrix(y_pred=y_pred, y_true=y_test), annot=True, fmt=".0f", linewidths=1.5, cmap="BuPu_r")
    plt.show()
    plt.savefig('../out/picture/result of permisson with Adaboost.pdf', bbox_inches='tight')
    permission_classification_report_AdaBoostClassifier = classification_report(y_pred, y_test, digits=4)
    joblib.dump(value=model,filename='../out/model/Adaboost_permission1227.gz',compress=True)
    print("model has saved!")
    print(permission_classification_report_AdaBoostClassifier)